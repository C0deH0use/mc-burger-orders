###
# @name= Request First Order
POST localhost:9090/order
Content-Type: application/json

{
  "customerId": 1011,
  "items": [
    {
      "name": "hamburger",
      "quantity": 9
    },
    {
      "name": "cheeseburger",
      "quantity": 5
    },
    {
      "name": "spicy-stripes",
      "quantity": 25
    },
    {
      "name": "coke",
      "quantity": 1
    },
    {
      "name": "fries",
      "quantity": 1
    }
  ]
}

> {%
    client.test("Request new order I", () => {
        client.assert(response.status === 201,
            `Expected Response Status to be 201, but was ${response.status}`);

        const hasNewOrderNumber = response.body.hasOwnProperty("orderNumber");
        client.assert(hasNewOrderNumber,
            `Expected number of new requested order, but is missing`);

        client.global.set("orderNumber1", response.body["orderNumber"]);
    })
%}

###
# @name= Request Second Order
POST localhost:9090/order
Content-Type: application/json

{
  "customerId": 1012,
  "items": [
    {
      "name": "hamburger",
      "quantity": 9
    },
    {
      "name": "cheeseburger",
      "quantity": 5
    },
    {
      "name": "mc-spicy",
      "quantity": 12
    },
    {
      "name": "spicy-stripes",
      "quantity": 10
    }
  ]
}


> {%
    client.test("Request new order I", () => {
        client.assert(response.status === 201,
            `Expected Response Status to be 201, but was ${response.status}`);

        const hasNewOrderNumber = response.body.hasOwnProperty("orderNumber");
        client.assert(hasNewOrderNumber,
            `Expected number of new requested order, but is missing`);

        client.global.set("orderNumber2", response.body["orderNumber"]);
    })
%}

###
# @name= Request Theird Order
POST localhost:9090/order
Content-Type: application/json

{
  "customerId": 1010,
  "items": [
    {
      "name": "hamburger",
      "quantity": 5
    },
    {
      "name": "fries",
      "quantity": 2
    }
  ]
}

> {%
    client.test("Request new order I", () => {
        client.assert(response.status === 201,
            `Expected Response Status to be 201, but was ${response.status}`);

        const hasNewOrderNumber = response.body.hasOwnProperty("orderNumber");
        client.assert(hasNewOrderNumber,
            `Expected number of new requested order, but is missing`)

        client.global.set("orderNumber3", response.body["orderNumber"])
    })
%}


###
#@name= Collect first order on ready
< {%
   import {wait} from "wait-for"
   wait(10)
   client.log("Calling Collect on order one " + client.global.get("orderNumber1"))
%}

POST localhost:9090/order/{{orderNumber1}}/collect
Content-Type: application/json

> {%
    client.test("Request new order I", () => {
        client.assert(response.status === 200,
            `Expected Response Status to be 200, but was ${response.status}`);
    })
%}